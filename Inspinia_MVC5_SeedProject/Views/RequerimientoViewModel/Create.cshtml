@model PissanoApp.ViewModels.RequerimientoViewModel

@{
    ViewBag.Title = "Create";
}


<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Requerimiento de Compra</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("Lista", "Index")
            </li>
            <li class="active">
                <strong>Creación de Requerimiento</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>


    
    <div class="form-horizontal">
        <h4>Crear Requerimiento de Compra</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" id="BtnGuardar" />*@
                
            </div>
        </div>


        <div class="row">
            <div class="col-xs-12">
                <input value="Guardar!" class="btn btn-primary" id="BtnGuardar" />
            </div>
        </div>

        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Cabecera</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="form-group">
                    <label class="font-noraml col-sm-2 control-label">Obra</label>
                    <div class="input-group col-sm-10">
                        <select data-placeholder="Elija la Obra..." class="chosen-select" style="width:350px;" tabindex="1" id="obra">
                            <option value="">Seleccione</option>

                            @foreach (var item in Model.Obras)
                            {
                                <option value=@Html.DisplayFor(modelItem => item.id)>
                                    @Html.DisplayFor(modelItem => item.nombre)
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="font-noraml col-sm-2 control-label">Prioridad</label>
                    <div class="input-group col-sm-10">
                        <select data-placeholder="Seleccione la Prioridad..." class="chosen-select" style="width:350px;" tabindex="2" id="prioridad">
                            <option value="">Seleccione</option>

                            @foreach (var item in Model.Prioridades)
                            {
                                <option value=@Html.DisplayFor(modelItem => item.prioridadId)>
                                    @Html.DisplayFor(modelItem => item.nombre)
                                </option>
                            }

                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="font-noraml col-sm-2 control-label">Comentario</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" tabindex="3" id="comentario"> <span class="help-block m-b-none">Agregue algún comentario a considerar durante la Orden de Compra</span>                                            
                    </div>
                </div>
            </div>
        </div>
    
        <div class="wrapper wrapper-content animated fadeInRight">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ibox float-e-margins">
                        <div class="ibox-title">
                            <h5>Elija sus Materiales desde la Tabla. Use el Filtro de Búsqueda</h5>
                            <div class="ibox-tools">
                                <a class="collapse-link">
                                    <i class="fa fa-chevron-up"></i>
                                </a>
                                
                            </div>
                        </div>
                        <div class="ibox-content">

                            <table class="table table-striped table-bordered table-hover dataTables-example" id="tableMaterial">
                                <thead>
                                    <tr>
                                        <th>Id</th>
                                        <th>Código</th>
                                        <th>Material</th>
                                        <th>Unidad de Medida</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.Materiales)
                                    {

                                        <tr class="gradeX">
                                            <td>@Html.DisplayFor(modelItem => item.materialId)</td>
                                            <td>@Html.DisplayFor(modelItem => item.codigo)</td>
                                            <td>@Html.DisplayFor(modelItem => item.nombre)</td>
                                            <td>@Html.DisplayFor(modelItem => item.UnidadMedida.nombre)</td>

                                        </tr>
                                    }



                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Id</th>
                                        <th>Código</th>
                                        <th>Material</th>
                                        <th>Unidad de Medida</th>
    
                                    </tr>
                                </tfoot>
                            </table>

                        </div>
                    </div>
                </div>
            </div>
            
        </div>


        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Materiales Seleccionados</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            
                        </div>
                    </div>
                    <div class="ibox-content">

                        <table class="table table-striped table-bordered table-hover dataTables-example" id="editableMaterial">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Código</th>
                                    <th>Material</th>
                                    <th>Unidad de Medida</th>
                                    <th>Cantidad</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>Id</th>
                                    <th>Código</th>
                                    <th>Material</th>
                                    <th>Unidad de Medida</th>
                                    <th>Cantidad</th>
                                    <th></th>
                                </tr>

                            </tfoot>
                        </table>

                    </div>
                </div>
            </div>
        </div>


    </div>
    



<div>
    @Html.ActionLink("Back to List", "Index")
</div>




@section Styles {
    
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")

    <script type="text/javascript">
        $(document).ready(function () {

            var $image = $(".image-crop > img")
            $($image).cropper({
                aspectRatio: 1.618,
                preview: ".img-preview",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });

            var $inputImage = $("#inputImage");
            if (window.FileReader) {
                $inputImage.change(function () {
                    var fileReader = new FileReader(),
                            files = this.files,
                            file;

                    if (!files.length) {
                        return;
                    }

                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        fileReader.readAsDataURL(file);
                        fileReader.onload = function () {
                            $inputImage.val("");
                            $image.cropper("reset", true).cropper("replace", this.result);
                        };
                    } else {
                        showMessage("Please choose an image file.");
                    }
                });
            } else {
                $inputImage.addClass("hide");
            }

            $("#download").click(function () {
                window.open($image.cropper("getDataURL"));
            });

            $("#zoomIn").click(function () {
                $image.cropper("zoom", 0.1);
            });

            $("#zoomOut").click(function () {
                $image.cropper("zoom", -0.1);
            });

            $("#rotateLeft").click(function () {
                $image.cropper("rotate", 45);
            });

            $("#rotateRight").click(function () {
                $image.cropper("rotate", -45);
            });

            $("#setDrag").click(function () {
                $image.cropper("setDragMode", "crop");
            });

            $('#data_1 .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#data_2 .input-group.date').datepicker({
                startView: 1,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            $('#data_3 .input-group.date').datepicker({
                startView: 2,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            $('#data_4 .input-group.date').datepicker({
                minViewMode: 1,
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                todayHighlight: true
            });

            $('#data_5 .input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            var elem = document.querySelector('.js-switch');
            var switchery = new Switchery(elem, { color: '#1AB394' });

            var elem_2 = document.querySelector('.js-switch_2');
            var switchery_2 = new Switchery(elem_2, { color: '#ED5565' });

            var elem_3 = document.querySelector('.js-switch_3');
            var switchery_3 = new Switchery(elem_3, { color: '#1AB394' });

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $('.demo1').colorpicker();

            

            $('.clockpicker').clockpicker();

            $('input[name="daterange"]').daterangepicker();

            $('#reportrange span').html(moment().subtract(29, 'days').format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

            $('#reportrange').daterangepicker({
                format: 'MM/DD/YYYY',
                startDate: moment().subtract(29, 'days'),
                endDate: moment(),
                minDate: '01/01/2012',
                maxDate: '12/31/2015',
                dateLimit: { days: 60 },
                showDropdowns: true,
                showWeekNumbers: true,
                timePicker: false,
                timePickerIncrement: 1,
                timePicker12Hour: true,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                opens: 'right',
                drops: 'down',
                buttonClasses: ['btn', 'btn-sm'],
                applyClass: 'btn-primary',
                cancelClass: 'btn-default',
                separator: ' to ',
                locale: {
                    applyLabel: 'Submit',
                    cancelLabel: 'Cancel',
                    fromLabel: 'From',
                    toLabel: 'To',
                    customRangeLabel: 'Custom',
                    daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
                    monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                    firstDay: 1
                }
            }, function (start, end, label) {
                console.log(start.toISOString(), end.toISOString(), label);
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            });


            $(".select2_demo_1").select2();
            $(".select2_demo_2").select2();
            $(".select2_demo_3").select2({
                placeholder: "Select a state",
                allowClear: true
            });

            $(".touchspin1").TouchSpin({
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });

            $(".touchspin2").TouchSpin({
                min: 0,
                max: 100,
                step: 0.1,
                decimals: 2,
                boostat: 5,
                maxboostedstep: 10,
                postfix: '%',
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });

            $(".touchspin3").TouchSpin({
                verticalbuttons: true,
                buttondown_class: 'btn btn-white',
                buttonup_class: 'btn btn-white'
            });



            // Manejo Tables

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });

            /* Init DataTables */
            var oTable = $('#editable').dataTable();

            /* Apply the jEditable handlers to the table */
            oTable.$('td').editable('../example_ajax.php', {
                "callback": function (sValue, y) {
                    var aPos = oTable.fnGetPosition(this);
                    oTable.fnUpdate(sValue, aPos[0], aPos[1]);
                },
                "submitdata": function (value, settings) {
                    return {
                        "row_id": this.parentNode.getAttribute('id'),
                        "column": oTable.fnGetPosition(this)[2]
                    };
                },

                "width": "90%",
                "height": "100%"
            });

            // Fin Manejo Tables


        $("#btnAgregar_2").click(function () {
            //window.open($image.cropper("getDataURL"));
            //alert("hola");
        });



        // Función que copia contenido de fila seleccionada y copia en tabla destino
        var table = $('#tableMaterial').DataTable();

        $('#tableMaterial tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }

            var row = $(this),
            cloneRow = row.clone();
            cloneRow.append('<td><input type="text" class="form-control" id="cantidad"></td>').append('<td><button type="button" class="btn btn-danger btn-sm btn-block" id="btnEliminar"> Eliminar!!</button></td>');

            copyTable = $('#editableMaterial tbody');

            //copyTable.append(cloneRow);
            
            var table3 = $('#editableMaterial').DataTable();

            //table3.row.add([1, 2, 3, 4]).draw();
            table3.row.add(cloneRow).draw();
            //table.row('.selected').remove().draw(false);
        });
            //Fin funcion



            // Función que elimina fila de Tabla Materiales Seleccionados       
        var table2 = $('#editableMaterial').DataTable();

        $('#editableMaterial tbody').on('click', 'button', function () {



            //if ($(this).hasClass('selected')) {
            //    $(this).removeClass('selected');
            //}
            //else {
            //    table2.$('tr.selected').removeClass('selected');
            //    $(this).addClass('selected');
            //}
            //var row = $(this);

            table2
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();

            //alert(row);
            //Pendiente
            //table2.row(row).remove().draw(false);

        });

            // Fin Función que elimina fila de Tabla Materiales Seleccionados


            // Función que guarda datos de Tabla Materiales Seleccionados   


        $("#BtnGuardar").click(function () {

                var cells = [];
                var rows = $("#editableMaterial").dataTable().fnGetNodes();
                //alert(rows.length);
                for (var i = 0; i < rows.length; i++) {
                    // Get HTML of 3rd column (for example)
                    //cells.push($(rows[i]).find("td:eq(4)").html());

                    //cells.push($(rows[i]).find("td:eq(4) input[type='text']").val());

                    cells.push({
                        cantidad: $(rows[i]).find("td:eq(4) input[type='text']").val(),
                        materialid: $(rows[i]).find("td:eq(0)").html()
                    });
                }

                //alert(cells);

                //var data = $.parseJSON(cells);
                var Detalles = [];

                for (var i = 0; i < cells.length; i++) {                  
                    var requerimientoDetalle = new Object();

                    requerimientoDetalle.materialId = cells[i].materialid;
                    requerimientoDetalle.cantidad = cells[i].cantidad;
                    Detalles.push(requerimientoDetalle);

                }


                var requerimiento = new Object();

                requerimiento.obraId = $("#obra").val();
                requerimiento.prioridadId = $("#prioridad").val();
                requerimiento.comentario = $("#comentario").val();

                requerimiento.Detalles = Detalles;

                var requerimientoViewModel = new Object();

                //requerimientoViewModel.Requerimiento = requerimiento

                RequerimientoFinal = JSON.stringify({ 'requerimiento': requerimiento });

                //alert(RequerimientoFinal);


                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
          //          param: RequerimientoFinal,
                    url: '@Url.Action("CrearRequerimiento")',
                    data: RequerimientoFinal,
                    error: function () {
                        window.location = '@Url.Action("Index")';
                        //alert("hola");
                    }
                });
            //.done(function (result) {
            //    //alert("pasó");
            //});
            });

        });


        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 5000,
            type: 'double',
            prefix: "$",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_2").ionRangeSlider({
            min: 0,
            max: 10,
            type: 'single',
            step: 0.1,
            postfix: " carats",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_3").ionRangeSlider({
            min: -50,
            max: 50,
            from: 0,
            postfix: "°",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_4").ionRangeSlider({
            values: [
                "January", "February", "March",
                "April", "May", "June",
                "July", "August", "September",
                "October", "November", "December"
            ],
            type: 'single',
            hasGrid: true
        });

        $("#ionrange_5").ionRangeSlider({
            min: 10000,
            max: 100000,
            step: 100,
            postfix: " km",
            from: 55000,
            hideMinMax: true,
            hideFromTo: false
        });

        $(".dial").knob();


        function fnClickAddRow() {
            $('#editableMaterial').dataTable().fnAddData([
                "1",
                "sdsdsd",
                "dsdssd",
                "sdsd",
                "sdsdds"]);

        }





    </script>
}