@model PissanoApp.Models.Contrato

@{
    ViewBag.Title = "Create";
}

<h2>Crear</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contrato</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ordenCompraId)

        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Cabecera</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">

                    <div class="col-sm-4">
                        <div class="form-group">

                            <label class="control-label" for="order_id">Número</label>
                            <input type="text" disabled class="form-control" tabindex="3" id="numero" value="@Html.DisplayFor(model => model.OrdenCompra.numero)">
                            @Html.ValidationMessageFor(model => model.OrdenCompra.numero)


                         </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-group">
                            @*<label class="font-noraml col-sm-2 control-label">Proveedor</label>*@
                            @*<div class="input-group col-sm-10">

                                </div>*@

                            <label class="control-label" for="order_id">Proveedor</label>
                            <input type="text" disabled class="form-control" tabindex="3" id="proveedor" value="@Html.DisplayFor(model => model.OrdenCompra.Proveedor.razonSocial)">

                        </div>
                    </div>


                    <div class="col-sm-12">
                        <div class="form-group">
                            @*<label class="font-noraml col-sm-2 control-label">Comentario</label>
                                <div class="col-sm-10">

                                </div>*@
                            <label class="control-label" for="order_id">Servicio</label>
                            <input type="text" disabled class="form-control" tabindex="3" id="servicio" value="@Html.DisplayFor(model => model.OrdenCompra.OrdenesCompraDetalles[0].Material.nombre)">

                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Pago</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label" for="order_id">Forma Pago</label>

                        <input type="text" disabled class="form-control" tabindex="3" id="formaPago" value="@Html.DisplayFor(model => model.OrdenCompra.FormaPago.nombre)">

                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label" for="order_id">Moneda</label>
                        <input type="text" disabled class="form-control" tabindex="3" id="moneda" value="@Html.DisplayFor(model => model.OrdenCompra.Moneda.nombre)">
                    </div>
                </div>



            </div>

            <div class="row">

                <div class="col-sm-6">
                    <div class="form-group">
                        <label class="control-label" for="order_id">% de Adelanto</label>
                        @*<input type="text" class="form-control" tabindex="3" id="Adelanto"> <span class="help-block m-b-none">Ingrese % de Adelanto</span>*@
                        @*<input class="touchspin2" type="text" value="0" name="adelanto" id="adelanto">*@
                        @Html.TextBoxFor(model => model.adelantoPorc, new { @class = "touchspin2" })
                        @Html.ValidationMessageFor(model => model.adelantoPorc)
                    </div>
                </div>


                <div class="col-sm-6">

                    <div class="form-group">
                        <label class="control-label" for="order_id">% de Fondo Garantía</label>
                        @*<input type="text" class="form-control" tabindex="3" id="Adelanto"> <span class="help-block m-b-none">Ingrese el % Fondo Garantía</span>*@
                        @*<input class="touchspin2" type="text" value="0" name="fondogarantia" id="fondogarantia">*@
                        @Html.TextBoxFor(model => model.fondoGarantiaPorc, new { @class = "touchspin2" })
                        @Html.ValidationMessageFor(model => model.fondoGarantiaPorc)
                    </div>

                </div>

            </div>
        </div>
    </div>


        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>Valorizaciones</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">
                <div class="row">


                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="control-label" for="order_id">Valorizacion</label>
                            <div class="col-md-10">
                                @Html.DropDownList("tipoValorizacionId", (IEnumerable<SelectListItem>)ViewBag.tipoValorizacionId, new { @class = "chosen-select" })
                                @Html.ValidationMessageFor(model => model.tipoValorizacionId)
                            </div>

                        </div>
                    </div>

                    <div class="col-sm-4">

                        <div class="form-group" id="data_1">
                            <label class="control-label" for="order_id">Fecha Inicio</label>
                            @Html.EditorFor(model => model.fechaInicio)
                            @Html.ValidationMessageFor(model => model.fechaInicio)

                            @*<div class="input-group date">
                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span><input type="text" class="form-control" id="fechainicio">
                            </div>*@
                        </div>


                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            <label class="control-label" for="order_id">Número de Pagos</label>
                            @*<input type="text" class="form-control" tabindex="3" id="Adelanto"> <span class="help-block m-b-none">Ingrese el número de Pagos</span>*@
                            @*<input class="touchspin1" type="text" value="" name="demo1" id="demo1">*@
                            @Html.TextBoxFor(model => model.numeroPagos, new { @class = "touchspin1" })
                            @Html.ValidationMessageFor(model => model.numeroPagos)

                        </div>
                    </div>

                </div>

                <div class="row">


                @*<div class="col-sm-12">
                    <div class="form-group">
                        <label class="control-label" for="metrado">Metrado</label>
                            <input type="text" class="form-control" tabindex="3" id="metrado" />
                    </div>
                </div>*@


                <div class="col-sm-12">
                    <div class="form-group">

                        <label class="control-label" for="order_id" >Comentario</label>
                        <input type="text" class="form-control" tabindex="3" id="comentario"> <span class="help-block m-b-none">Agregue algún comentario a considerar en el Contrato</span>

                    </div>
                </div>
                

            </div>

            </div>
        </div>

    <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Styles {

    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")

    <script type="text/javascript">
    $(document).ready(function () {


        $('#data_1 .input-group.date').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true
        });

        $('.demo1').colorpicker();


        $(".touchspin1").TouchSpin({
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });

        $(".touchspin2").TouchSpin({
            min: 0,
            max: 100,
            step: 1.0,
            decimals: 0,
            boostat: 5,
            maxboostedstep: 10,
            postfix: '%',
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white',

        });



        // Manejo Tables

        $('.dataTables-example').DataTable({
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy' },
                { extend: 'csv' },
                { extend: 'excel', title: 'ExampleFile' },
                { extend: 'pdf', title: 'ExampleFile' },

                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                    }
                }
            ]

        });

        /* Init DataTables */
        var oTable = $('#editable').dataTable();

        /* Apply the jEditable handlers to the table */
        oTable.$('td').editable('../example_ajax.php', {
            "callback": function (sValue, y) {
                var aPos = oTable.fnGetPosition(this);
                oTable.fnUpdate(sValue, aPos[0], aPos[1]);
            },
            "submitdata": function (value, settings) {
                return {
                    "row_id": this.parentNode.getAttribute('id'),
                    "column": oTable.fnGetPosition(this)[2]
                };
            },

            "width": "90%",
            "height": "100%"
        });

        // Fin Manejo Tables


        $("#btnAgregar_2").click(function () {
            //window.open($image.cropper("getDataURL"));
            //alert("hola");
        });







        });





        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 10 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        }

        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 5000,
            type: 'double',
            prefix: "$",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_2").ionRangeSlider({
            min: 0,
            max: 10,
            type: 'single',
            step: 0.1,
            postfix: " carats",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_3").ionRangeSlider({
            min: -50,
            max: 50,
            from: 0,
            postfix: "°",
            prettify: false,
            hasGrid: true
        });

        $("#ionrange_4").ionRangeSlider({
            values: [
                "January", "February", "March",
                "April", "May", "June",
                "July", "August", "September",
                "October", "November", "December"
            ],
            type: 'single',
            hasGrid: true
        });

        $("#ionrange_5").ionRangeSlider({
            min: 10000,
            max: 100000,
            step: 100,
            postfix: " km",
            from: 55000,
            hideMinMax: true,
            hideFromTo: false
        });

        $(".dial").knob();


        function fnClickAddRow() {
            $('#editableMaterial').dataTable().fnAddData([
                "1",
                "sdsdsd",
                "dsdssd",
                "sdsd",
                "sdsdds"]);

        }





    </script>
}
