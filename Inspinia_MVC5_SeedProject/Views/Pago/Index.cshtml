@model IEnumerable<PissanoApp.Models.Pago>

@{
    ViewBag.Title = "Index";
}


<h2>Pagos de Ordenes de Compras y Servicios</h2>

 

<p>

        <a href="@Url.Action("IndexAccounting", "OrdenCompra")" class="btn btn-w-m btn-primary">Crear Nuevo</a>
    </p>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Todas los Pagos. Use el Filtro de Búsqueda</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>

                    </div>
                </div>


                <div class="ibox-content">


                    <div class="row">

                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">Obra</label>
                                @Html.DropDownList("col3_filter", (IEnumerable<SelectListItem>)ViewBag.obraId, "Todos", new { @class = "form-control column_filter", @data_column = "3" })

                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="quantity">Orden</label>
                                <input type="text" id="col2_filter" name="col2_filter" data-column="2" value="" placeholder="Orden" class="form-control column_filter">
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="product_name">Proveedor</label>
                                <input type="text" id="col6_filter" name="col6_filter" data-column="6" value="" placeholder="Proveedor" class="form-control column_filter">
                            </div>
                        </div>
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label" for="status">Estado</label>
                                @Html.DropDownList("col1_filter", (IEnumerable<SelectListItem>)ViewBag.estadoPagoId, "Todos", new { @class = "form-control column_filter", @data_column = "1" })
                                @*<select name="estadoOrdenId" id="col1_filter" data-column="1" class="form-control column_filter">
                                        <option value="" selected>Todos</option>
                                        <option value="Aprobación 3">Aprobación 3</option>
                                        <option value="Aprobación 2">Aprobación 2</option>
                                    </select>*@
                            </div>
                        </div>
                    </div>


                    @*<table class="footable table table-stripped toggle-arrow-tiny " data-page-size="10">*@
                    <table class="table table-stripped table-bordered table-hover dataTables-example " data-page-size="10">

                        <thead>
                            <tr>

                                <th data-toggle="true" >Id</th>
                                <th>Estado</th>
                                <th>OC</th>
                                <th>Obra</th>
                                <th>Fecha</th>
                                <th>Proveedor</th>
                                <th>Tipo Compra</th>
                                <th>Moneda</th>
                                <th hidden="hidden">Total</th>
                                <th>Total OC</th>
                                <th>Fecha Programada Pago</th>
                                <th>Fecha Pago Real</th>
                                <th>Pago</th>
                                <th>Detracción</th>
                                <th>Nro Documento</th>
                                <th></th>
                                <th></th>


                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {


                                <tr class="gradeX">
                                    <td >
                                        @Html.DisplayFor(modelItem => item.pagoId)</td>

                                    @*<td class="client-status"><span class="label label-warning">@Html.DisplayFor(modelItem => item.EstadoOrden.nombre) </span></td>*@
                                    <td class="client-status">

                                        @if (item.EstadoPago.nombre == "Pendiente de Pago")
                                        {
                                            <button type="button" class="btn btn-danger btn-xs">
                                                @Html.DisplayFor(modelItem => item.EstadoPago.nombre)
                                            </button>
                                        }
                                        else if (item.EstadoPago.nombre == "Pago Realizado")
                                        {
                                            <button type="button" class="btn btn-primary btn-xs">
                                                @Html.DisplayFor(modelItem => item.EstadoPago.nombre)
                                            </button>
                                        }

                                        @*@if (item.OrdenCompra.EstadoOrden.nombre == "Ingreso Total")
                                        {
                                            <button type="button" class="btn btn-danger btn-xs">
                                                @Html.DisplayFor(modelItem => item.OrdenCompra.EstadoOrden.nombre)
                                            </button>
                                        }
                                        else if (item.OrdenCompra.EstadoOrden.nombre == "Pendiente de Pago")
                                        {
                                            <button type="button" class="btn btn-warning btn-xs">
                                                @Html.DisplayFor(modelItem => item.OrdenCompra.EstadoOrden.nombre)
                                            </button>
                                        }
                                        else if (item.OrdenCompra.EstadoOrden.nombre == "Pago Realizado")
                                        {
                                            <button type="button" class="btn btn-primary btn-xs">
                                                @Html.DisplayFor(modelItem => item.OrdenCompra.EstadoOrden.nombre)
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-default btn-xs">
                                                @Html.DisplayFor(modelItem => item.OrdenCompra.EstadoOrden.nombre)
                                            </button>
                                        }*@

                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.numero)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.Obra.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.fechaCreacion)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.Proveedor.razonSocial)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.Requerimiento.TipoCompra.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.Moneda.nombre)</td>
                                    <td hidden="hidden">@item.OrdenCompra.total</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.total)</td>
                     
                                    <td>@Html.DisplayFor(modelItem => item.fechaPagoProg)</td>
                                    <td>@Html.DisplayFor(modelItem => item.fechaPagoReal)</td>
                                    <td>@Html.DisplayFor(modelItem => item.pagoMonto)</td>
                                    <td>@Html.DisplayFor(modelItem => item.pagoDetraccion)</td>
                                    <td>@Html.DisplayFor(modelItem => item.numero)</td>
                                   

                                    <td>
                                            <a href="~/Pago/Edit/@Html.DisplayFor(modelItem => item.pagoId)" class="btn btn-success btn-sm"><i class="fa fa-money"></i> Editar Pago </a>
                                    </td>
                                    <td>
                                        <a href="~/OrdenCompra/Document/@Html.DisplayFor(modelItem => item.ordenCompraId)" class="btn btn-white btn-sm"><i class="fa fa-print"></i> Imprimir OC </a>
                                    </td>
                                </tr>



                            }


                        </tbody>
                        <tfoot>
                            <tr>

                                <th data-toggle="true">Id</th>
                                <th>Estado</th>
                                <th>OC</th>
                                <th>Obra</th>
                                <th>Fecha</th>
                                <th>Proveedor</th>
                                <th>Tipo Compra</th>
                                <th>Moneda</th>
                                <th hidden="hidden">Total</th>
                                <th>Total OC</th>
                                <th>Fecha Programada Pago</th>
                                <th>Fecha Pago Real</th>
                                <th>Pago</th>
                                <th>Detracción</th>
                                <th>Nro Documento</th>
                                <th></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>

                </div>
            </div>
        </div>
    </div>

</div>

@section Styles {

    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/footableStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@section Scripts {

    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/jeditable")
    @Scripts.Render("~/plugins/footable")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/chosen")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ],
                "order": [[0, "desc"]],
                "pageLength": 25

            });


            $('.footable').footable();

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            // Eventos de filtros

            $('input.column_filter').on('keyup click', function () {
                filterColumn($(this).attr('data-column'));
            });

            $('select.column_filter').on('onchange click', function () {
                filterColumn($(this).attr('data-column'));
            });

            //Filtro de Chosen-select
            var config = {
                '.chosen-select': {},
                '.chosen-select-deselect': { allow_single_deselect: true },
                '.chosen-select-no-single': { disable_search_threshold: 10 },
                '.chosen-select-no-results': { no_results_text: 'Oops, no encontrado!' },
                '.chosen-select-width': { width: "200%" }
                //
            }
            for (var selector in config) {
                $(selector).chosen(config[selector]);
            }


        });

        function filterColumn(i) {
            $('.dataTables-example').DataTable().column(i).search(
                $('#col' + i + '_filter').val()
            ).draw();
        }

    </script>
}


