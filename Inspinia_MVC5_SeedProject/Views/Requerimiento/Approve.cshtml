@model PissanoApp.Models.Requerimiento

@{
    ViewBag.Title = "Approve";
}

@*@using (Html.BeginForm())
{*@
    @*@Html.AntiForgeryToken()*@
    @Html.HiddenFor(model => model.requerimientoId)



<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-8">
        <h2>Documento de Requerimiento</h2>
        <ol class="breadcrumb">
            @*<li>
                    <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
                </li>
                <li>
                    Other Pages
                </li>
                <li class="active">
                    <strong>Invoice</strong>
                </li>*@
        </ol>
    </div>
    <div class="col-lg-4">
        <div class="title-action">
            @*<a href="#" class="btn btn-white"><i class="fa fa-pencil"></i> Editar </a>
                <a href="#" class="btn btn-white"><i class="fa fa-check "></i> Guardar </a>*@
            <a href="~/Requerimiento/DocumentPrint/@Html.DisplayFor(model => model.requerimientoId)" target="_blank" class="btn btn-primary"><i class="fa fa-print"></i> Imprimir </a>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-12">

        @* Copiar desde aqui para print*@
        <div class="wrapper wrapper-content animated fadeInRight">
            <div class="ibox-content p-xl">
                <div class="row">
                    <div class="col-sm-6">
                        @*<h5>From:</h5>*@
                        <address>

                            <strong>@Html.DisplayFor(model => model.Obra.nombre)</strong><br>
                            Tipo de Compra: @Html.DisplayFor(model => model.TipoCompra.nombre)<br>
                            Prioridad: @Html.DisplayFor(model => model.Prioridad.nombre)<br>
                            Plazo de Atención (días): @Html.DisplayFor(model => model.Prioridad.plazoDias)<br>

                        </address>
                        <span><strong>Fecha Emisión:</strong> @Html.DisplayFor(model => model.fechaCreacion)</span><br />
                    </div>
                    <div class="col-sm-6 text-right">
                        <h4>No. de Requerimiento</h4>
                        <h4 class="text-navy">@Html.DisplayFor(model => model.requerimientoId)</h4>

                    </div>

                </div>
                @* Se borró bloque de código con respecto a Documento OC *@

                <div class="table-responsive m-t">
                    <table class="table invoice-table" id="tablaItems">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Lista de Items</th>
                                <th>Cantidad</th>
                                <th>UND.</th>
                                <th>Estado Req.</th>
                                <th>OC</th>
                                <th>Estado OC</th>
                                <th>Partida</th>
                                <th>SubPresupuesto</th>
                            </tr>
                        </thead>
                        <tbody>




                            @foreach (var item in Model.Detalles)
                            {
                                <tr>

                                    <td>
                                        @if ((item.EstadoRequerimientoDetalle.nombre == "Sin Aprobación") || (item.EstadoRequerimientoDetalle.nombre == "Aprobación Rechazada"))
                                        {
                                            <input type="checkbox" class="i-checks" id=@Html.DisplayFor(modelItem => item.requerimientoDetalleId) name="input[]">
                                        }
                                    </td>
                                    <td>
                                        <div><strong>@Html.DisplayFor(modelItem => item.Material.nombre)</strong></div>
                                        <small>@Html.DisplayFor(modelItem => item.Material.UnidadMedida.nombre)</small>
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.cantidad)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Material.UnidadMedida.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.EstadoRequerimientoDetalle.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.numero)</td>
                                    <td>@Html.DisplayFor(modelItem => item.OrdenCompra.EstadoOrden.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Partida.nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Partida.SubPresupuesto.nombre)</td>
                                </tr>
                            }




                        </tbody>
                    </table>


                    @* botones de Aprobación *@
                    <div class="text-right">
                        <div class="form-group">
                            @*<input type="submit" value="Aprobar!" class="btn btn-primary" />*@
                            <input value="Aprobar!" class="btn btn-primary" id="BtnAprobar" />
                            <input type="submit" value="Rechazar!" class="btn btn-danger" />
                        </div>
                    </div>

                </div><!-- /table-responsive -->


                <div class="well m-t">
                    <strong>Comentario</strong>
                    @Html.DisplayFor(model => model.comentario)
                </div>


            </div>
        </div>

    </div>
</div>

@* Copiar hasta aqui para print*@

@*}*@
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.requerimientoId }) |*@
    @Html.ActionLink("Back to List", "IndexApprove")
</p>


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });


            $("#BtnAprobar").click(function () {

                var cells = [];

                $('#tablaItems tr').each(function () {
                    if ($(this).find("td:eq(0) input[type='checkbox']").is(":checked")) {
                        cells.push({

                            requerimientoDetalleId: $(this).find("td:eq(0) input[type='checkbox']").attr("id")
                            //$(this).find("td").eq(3).text(cantidad);
                            //$(this).find("td").eq(4).text(partidacodigo);
                            //$(this).find("td").eq(5).text(partidatexto);

                        });
                    }
                    

                });



                    var Detalles = [];

                    for (var i = 0; i < cells.length; i++) {                  
                        var requerimientoDetalle = new Object();

                        requerimientoDetalle.requerimientoDetalleId = cells[i].requerimientoDetalleId;
                        Detalles.push(requerimientoDetalle);

                        alert(requerimientoDetalle.requerimientoDetalleId);


                    }

                

                    var requerimiento = new Object();

                    requerimiento.requerimientoId = $("#requerimientoId").val(); 
                    requerimiento.Detalles = Detalles;

                    RequerimientoFinal = JSON.stringify({ 'requerimiento': requerimiento });


                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        type: 'POST',
                        url: '@Url.Action("Approve")',
                        data: RequerimientoFinal,
                        success: function (data) {
                            window.location = '@Url.Action("IndexApprove")';
                        },
                        error: function (result) {
                            alert(result.statusText)
                            alert('No se pudo realizar la acción solicitada');

                        }
                    });
                });

        });


        //function addRequestVerificationToken(data) {
        //    data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
        //    return data;
        //};
    </script>
}
